<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="._x|VpA2g?5+Z`o%/F^e" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="TK0@;l5SgzoW8+j;H(G_" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace castles {" line1="    //% block" line2="    export function buildCastleWall() {" line3="        let BlocType = 0" line4="        let WallWidth = 0" line5="        let WallLenght = 0" line6="        let WallHeight = 0" line7="        let alternate = false" line8="        let putBlock = false" line9="        let TowerSize = 0" line10="        let TowerHeight = 0" line11="" line12="        BlocType = COBBLESTONE" line13="        WallWidth = 3" line14="        WallLenght = 13" line15="        WallHeight = 6" line16="        builder.place(CYAN_STAINED_GLASS)" line17="        // builder.teleportTo(pos(0, 0, 0))" line18="        // builder is at the center of the tower - shift it to a corner" line19="        builder.shift((0 - WallWidth) / 2 + 1, 0, (0 - WallWidth) / 2 + 1)" line20="        // build 2 walls from bottom to top (up to WallHeight)" line21="        for (let posY = 0; posY &lt;= WallHeight - 1; posY++) {" line22="            alternate = false" line23="            // add 2 walls" line24="            // builder.mark()" line25="            for (let index = 0; index &lt; 2; index++) {" line26="                putBlock = true" line27="                if (posY == WallHeight - 1) {" line28="                    alternate = true" line29="                }" line30="                // add a wall" line31="                for (let index2 = 0; index2 &lt; WallLenght - 1; index2++) {" line32="                    if (putBlock) {" line33="                        builder.place(BlocType)" line34="                    }" line35="                    if (alternate) {" line36="                        putBlock = !(putBlock)" line37="                    }" line38="                    builder.move(FORWARD, 1)" line39="                }" line40="                // builder.tracePath(BlocType)" line41="                builder.turn(LEFT_TURN)" line42="                for (let index3 = 0; index3 &lt; WallWidth - 1; index3++) {" line43="                    if (putBlock) {" line44="                        builder.place(BlocType)" line45="                    }" line46="                    if (alternate) {" line47="                        putBlock = !(putBlock)" line48="                    }" line49="                    builder.move(FORWARD, 1)" line50="                }" line51="                // builder.tracePath(BlocType)" line52="                builder.turn(LEFT_TURN)" line53="            }" line54="            builder.move(UP, 1)" line55="        }" line56="        // mov builder to center on other wall's end   ( added -1 as hotfix :/ )" line57="        builder.shift(WallLenght - 1 - WallWidth / 2, 0 - WallHeight, WallWidth / 2 - 1)" line58="        // verify it's ok" line59="        builder.place(CYAN_WOOL)" line60="    }" line61="" line62="    //% block" line63="    export function buildCastleTower() {" line64="        let BlocType2 = 0" line65="        let WallWidth2 = 0" line66="        let WallLenght2 = 0" line67="        let WallHeight2 = 0" line68="        let alternate2 = false" line69="        let putBlock2 = false" line70="        let TowerSize2 = 0" line71="        let TowerHeight2 = 0" line72="" line73="        BlocType2 = COBBLESTONE" line74="        TowerSize2 = 5" line75="        TowerHeight2 = 8" line76="        // builder.teleportTo(pos(0, 0, 0))" line77="        // builder is at the center of the tower - shift it to a corner" line78="        builder.shift((0 - TowerSize2) / 2 + 1, 0, (0 - TowerSize2) / 2 + 1)" line79="        // let posX = Math.sin(3.14159265*2)  // will need this for circular tower's base" line80="        // build 4 walls from bottom to top (up to TowerHeight)" line81="        for (let height2 = 0; height2 &lt;= TowerHeight2; height2++) {" line82="            // add 4 walls" line83="            for (let index4 = 0; index4 &lt; 4; index4++) {" line84="                // builder.mark()" line85="                // add a wall" line86="                for (let index5 = 0; index5 &lt; TowerSize2 - 1; index5++) {" line87="                    builder.place(BlocType2)" line88="                    builder.move(FORWARD, 1)" line89="                }" line90="                // builder.tracePath(BlocType)" line91="                builder.turn(LEFT_TURN)" line92="            }" line93="            builder.move(UP, 1)" line94="        }" line95="        // build the upper part, larger by 1" line96="        // shift in diagonal by 1 block" line97="        builder.shift(-1, 0, -1)" line98="        for (let height22 = 0; height22 &lt;= 2; height22++) {" line99="            // add 4 walls" line100="            for (let index6 = 0; index6 &lt; 4; index6++) {" line101="                // builder.mark()" line102="                // add a wall" line103="                for (let index42 = 0; index42 &lt;= TowerSize2; index42++) {" line104="                    if (height22 == 2 &amp;&amp; index42 % 2 == 1) {" line105="" line106="                    } else {" line107="                        builder.place(BlocType2)" line108="                    }" line109="                    builder.move(FORWARD, 1)" line110="                }" line111="                // builder.tracePath(BlocType)" line112="                builder.turn(LEFT_TURN)" line113="            }" line114="            builder.move(UP, 1)" line115="        }" line116="        // mov builder back to center" line117="        builder.shift(TowerSize2 / 2, 0 - (TowerHeight2 + 4), TowerSize2 / 2)" line118="        // verify it's ok" line119="        builder.place(GLASS)" line120="    }" line121="}" numlines="122"></mutation></block></statement></block></xml>